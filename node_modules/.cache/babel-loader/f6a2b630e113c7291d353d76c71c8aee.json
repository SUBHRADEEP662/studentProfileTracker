{"ast":null,"code":"var _jsxFileName = \"E:\\\\react projects\\\\clgPrj\\\\temp\\\\src\\\\components\\\\home\\\\MyNav.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport brand from '../../img/brand.jpg';\nimport { Form, Col, Button, Modal } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useState } from 'react';\nimport Axios from 'axios';\nimport jwt from 'jwt-decode';\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MyNav() {\n  _s();\n\n  const [modalShow, setModalShow] = useState(false);\n  const [modalShowTwo, setModalShowTwo] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-expand-sm bg-light m-1 navbar-light sticky-top\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"navbar-brand\",\n        href: \"#brand\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: brand,\n          height: \"40px\",\n          width: \"80px\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 59\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navbar-toggler\",\n        type: \"button\",\n        \"data-toggle\": \"collapse\",\n        \"data-target\": \"#collapsibleNavbar\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"navbar-toggler-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"collapse navbar-collapse\",\n        id: \"collapsibleNavbar\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"navbar-nav ml-auto\",\n          style: {\n            fontSize: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"nav-link font-weight-bold text-primary\",\n              onClick: () => setModalShowTwo(true),\n              href: \"#1\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-sign-in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 124\n              }, this), \" LOG IN\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 17\n          }, this), \" \\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"nav-link font-weight-bold text-primary\",\n              onClick: () => setModalShow(true),\n              href: \"#2\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-user-plus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 121\n              }, this), \" SIGN UP\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }, this), \" \\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Signup, {\n      show: modalShow,\n      onHide: () => setModalShow(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Login, {\n      show: modalShowTwo,\n      onHide: () => setModalShowTwo(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MyNav, \"GN0xL0mDHSfY25pn4ZvNRYRaFVU=\");\n\n_c = MyNav;\n\nfunction Signup(props) {\n  _s2();\n\n  let [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    registration: \"\",\n    designation: \"\",\n    department: \"\",\n    roll: \"\"\n  });\n  let name, value;\n\n  let handleInput1 = e => {\n    console.log(e);\n    name = e.target.name;\n    value = e.target.value;\n    setUser({ ...user,\n      [name]: value\n    });\n  };\n\n  var userData1 = async e => {\n    e.preventDefault();\n    let {\n      email,\n      password,\n      name,\n      registration,\n      designation,\n      department,\n      roll\n    } = user;\n    let res = await fetch(\"/newsignup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password,\n        name,\n        registration,\n        designation,\n        department,\n        roll\n      })\n    });\n    let newdata = await res.json();\n\n    if (newdata.status === 402 || !newdata) {\n      window.alert(\"Registration Unsucessful\");\n    } else {\n      window.alert(\"Registration Sucessful\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, { ...props,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: \"Please sign up to proceed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-center\",\n          children: \"Student Profile Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            method: \"POST\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGridEmail\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Email*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  name: \"email\",\n                  type: \"email\",\n                  onChange: handleInput1,\n                  placeholder: \"Enter email\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGridPassword\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Password*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  name: \"password\",\n                  type: \"password\",\n                  onChange: handleInput1,\n                  placeholder: \"Password\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formGridAddress1\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Name*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                name: \"name\",\n                type: \"text\",\n                onChange: handleInput1,\n                placeholder: \"Enter your name (in caps)\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formGridAddress2\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Registration number with year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                name: \"registration\",\n                type: \"number\",\n                onChange: handleInput1,\n                placeholder: \"College registration number with year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGridState\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Signup as*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  name: \"designation\",\n                  onChange: handleInput1,\n                  defaultValue: \"Choose...\",\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Choose...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"student\",\n                    children: \"Student\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"mentor\",\n                    children: \"Mentor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGridState\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Department*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  onChange: handleInput1,\n                  name: \"department\",\n                  defaultValue: \"Choose...\",\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Choose...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"cse\",\n                    children: \"CSE\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"ece\",\n                    children: \"ECE\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"ee\",\n                    children: \"EE\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"ce\",\n                    children: \"CE\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"me\",\n                    children: \"ME\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGridZip\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Roll number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  name: \"roll\",\n                  type: \"number\",\n                  onChange: handleInput1,\n                  placeholder: \"Enter roll no\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              id: \"formGridCheckbox\",\n              children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"checkbox\",\n                label: \"Remember me\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 13\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"*** Mentor does not have registration or roll no ***\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              href: \"#\",\n              className: \"float-right\",\n              onClick: userData1,\n              variant: \"warning\",\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: props.onHide,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s2(Signup, \"d1WbLquvMi15ZAc7dIel1SY9eDA=\");\n\n_c2 = Signup;\n\nfunction Login(props) {\n  _s3();\n\n  let history = useHistory();\n  let [user, setUser] = useState({\n    designation: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  let name, value;\n\n  let handleInput2 = e => {\n    console.log(e);\n    name = e.target.name;\n    value = e.target.value;\n    setUser({ ...user,\n      [name]: value\n    });\n  };\n\n  var userData2 = async e => {\n    e.preventDefault();\n    let {\n      designation,\n      email,\n      password\n    } = user;\n    Axios.post('/axioslogin', {\n      designation: designation,\n      email: email,\n      password: password\n    }).then(result => {\n      console.log(result);\n\n      if (result.data.access) {\n        const token1 = result.data.access;\n        localStorage.setItem('token', token1);\n        let user = jwt(token1);\n        console.log(user);\n        window.alert(\"Login Sucessful\");\n\n        if (designation === 'student') {\n          history.push('/student');\n        } else {\n          history.push('/mentor');\n        }\n      } else {\n        if (result.data.message) {\n          window.alert(\"Login Unsucessful\");\n        }\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, { ...props,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: \"Please Login to proceed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-center\",\n          children: \"Student Profile Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGridState\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Login as*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  name: \"designation\",\n                  onChange: handleInput2,\n                  defaultValue: \"Choose...\",\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Choose...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"student\",\n                    children: \"Student\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"mentor\",\n                    children: \"Mentor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGridEmail\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Email*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  name: \"email\",\n                  onChange: handleInput2,\n                  placeholder: \"Enter email\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGridPassword\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Password*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  name: \"password\",\n                  onChange: handleInput2,\n                  placeholder: \"Password\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              id: \"formGridCheckbox\",\n              children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"checkbox\",\n                label: \"Remember me\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              href: \"#\",\n              className: \"float-right\",\n              onClick: userData2,\n              variant: \"warning\",\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: props.onHide,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s3(Login, \"W+0sDf26eoaW4O9rPgiSJD6/7qs=\", false, function () {\n  return [useHistory];\n});\n\n_c3 = Login;\nexport default MyNav;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MyNav\");\n$RefreshReg$(_c2, \"Signup\");\n$RefreshReg$(_c3, \"Login\");","map":{"version":3,"sources":["E:/react projects/clgPrj/temp/src/components/home/MyNav.js"],"names":["brand","Form","Col","Button","Modal","useState","Axios","jwt","useHistory","MyNav","modalShow","setModalShow","modalShowTwo","setModalShowTwo","fontSize","Signup","props","user","setUser","email","password","name","registration","designation","department","roll","value","handleInput1","e","console","log","target","userData1","preventDefault","res","fetch","method","headers","body","JSON","stringify","newdata","json","status","window","alert","onHide","Login","history","handleInput2","userData2","post","then","result","data","access","token1","localStorage","setItem","push","message"],"mappings":"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","sourcesContent":["import brand from '../../img/brand.jpg';\r\nimport {Form, Col, Button, Modal} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {useState} from 'react';\r\nimport Axios from 'axios';\r\nimport jwt from 'jwt-decode';\r\nimport { useHistory } from 'react-router';\r\n\r\nfunction MyNav() {\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [modalShowTwo, setModalShowTwo] = useState(false);\r\n    return( \r\n        <>\r\n            <nav className=\"navbar navbar-expand-sm bg-light m-1 navbar-light sticky-top\">\r\n                <a className=\"navbar-brand\" href=\"#brand\"><img src={brand} height='40px' width='80px' alt='' /> </a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n                <ul className=\"navbar-nav ml-auto\" style={{fontSize: '15px'}}>\r\n    \r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link font-weight-bold text-primary\" onClick={() => setModalShowTwo(true)} href=\"#1\"> <i className='fa fa-sign-in'></i> LOG IN</a> \r\n                </li> &nbsp;&nbsp;\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link font-weight-bold text-primary\" onClick={() => setModalShow(true)} href=\"#2\"> <i className='fa fa-user-plus'></i> SIGN UP</a>\r\n                </li> &nbsp;&nbsp;\r\n                <li>\r\n                    <a ></a>\r\n                </li>\r\n                \r\n        \r\n                </ul>\r\n  </div> \r\n            </nav>\r\n            <Signup show={modalShow} onHide={() => setModalShow(false)} />\r\n            <Login show={modalShowTwo} onHide={() => setModalShowTwo(false)} />\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nfunction Signup(props){\r\n    let [user, setUser] = useState({\r\n        email:\"\", password: \"\", name: \"\", \r\n        registration: \"\", designation: \"\", department: \"\", roll: \"\"\r\n    });\r\n\r\n    let name, value;\r\n\r\n    let handleInput1 = (e) => {\r\n        console.log(e);\r\n        name = e.target.name;\r\n        value = e.target.value;\r\n\r\n        setUser({ ...user, [name]: value });\r\n    }\r\n    var userData1 = async (e) => {\r\n        e.preventDefault();\r\n        let {email,password,name,registration,designation,department, roll} = user;\r\n\r\n        let res = await fetch(\"/newsignup\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                email,password,name,registration,designation,department,roll\r\n            })\r\n        });\r\n \r\n        let newdata = await res.json();\r\n\r\n        if (newdata.status === 402 || !newdata) {\r\n            window.alert(\"Registration Unsucessful\");\r\n        } else {  \r\n            window.alert(\"Registration Sucessful\");\r\n        }\r\n   }\r\n    return(\r\n        <>\r\n        <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Please sign up to proceed\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <h4 className='text-center'>Student Profile Tracker</h4>\r\n        <p>\r\n        <Form method='POST'>\r\n            <Form.Row>\r\n                <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                <Form.Label>Email*</Form.Label>\r\n                <Form.Control name='email' type=\"email\" onChange={handleInput1} placeholder=\"Enter email\" required />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                <Form.Label>Password*</Form.Label>\r\n                <Form.Control name='password' type=\"password\" onChange={handleInput1} placeholder=\"Password\" required />\r\n                </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Group controlId=\"formGridAddress1\">\r\n                <Form.Label>Name*</Form.Label>\r\n                <Form.Control name='name' type='text' onChange={handleInput1} placeholder=\"Enter your name (in caps)\" required />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formGridAddress2\">\r\n                <Form.Label>Registration number with year</Form.Label>\r\n                <Form.Control name='registration' type='number' onChange={handleInput1} placeholder=\"College registration number with year\" />\r\n            </Form.Group>\r\n\r\n            <Form.Row>\r\n            <Form.Group as={Col} controlId=\"formGridState\">\r\n                <Form.Label>Signup as*</Form.Label>\r\n                <Form.Control as=\"select\" name='designation' onChange={handleInput1} defaultValue=\"Choose...\" required>\r\n                    <option value=''>Choose...</option>\r\n                    <option value='student'>Student</option>\r\n                    <option value='mentor'>Mentor</option>\r\n                </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} controlId=\"formGridState\">\r\n                <Form.Label>Department*</Form.Label>\r\n                <Form.Control as=\"select\" onChange={handleInput1} name='department' defaultValue=\"Choose...\" required>\r\n                    <option value=''>Choose...</option>\r\n                    <option value='cse'>CSE</option>\r\n                    <option value='ece'>ECE</option>\r\n                    <option value='ee'>EE</option>\r\n                    <option value='ce'>CE</option>\r\n                    <option value='me'>ME</option>\r\n                </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} controlId=\"formGridZip\">\r\n                <Form.Label>Roll number</Form.Label>\r\n                <Form.Control name='roll' type='number' onChange={handleInput1} placeholder='Enter roll no' />\r\n                </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Group id=\"formGridCheckbox\">\r\n                <Form.Check type=\"checkbox\" label=\"Remember me\" />\r\n            </Form.Group> <span>*** Mentor does not have registration or roll no ***</span>\r\n\r\n            <Button href='#' className='float-right' onClick={userData1} variant=\"warning\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n        </p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nfunction Login(props){\r\n\r\n    let history = useHistory();\r\n\r\n    let [user, setUser] = useState({\r\n        designation: \"\", email: \"\", password: \"\"\r\n    });\r\n    let name, value;\r\n\r\n    let handleInput2 = (e) => {\r\n        console.log(e);\r\n        name = e.target.name;\r\n        value = e.target.value;\r\n\r\n        setUser({ ...user, [name]: value });\r\n    }\r\n    var userData2 = async (e) => {\r\n        e.preventDefault();\r\n        let { designation, email, password } = user;\r\n\r\n\r\n        Axios.post('/axioslogin', {\r\n            designation: designation,\r\n            email: email, \r\n            password: password,\r\n\r\n        }).then((result) => {\r\n            console.log(result)\r\n            if (result.data.access) {\r\n                const token1 = result.data.access;\r\n                localStorage.setItem('token', token1)\r\n                let user = jwt(token1)\r\n                console.log(user);\r\n\r\n                window.alert(\"Login Sucessful\")\r\n                if(designation === 'student'){  \r\n                    history.push('/student')\r\n                }\r\n                else {\r\n                    history.push('/mentor')\r\n                }\r\n\r\n            } else {\r\n                if (result.data.message) {\r\n                    window.alert(\"Login Unsucessful\")\r\n                }\r\n\r\n            }\r\n        })\r\n\r\n    }\r\n    \r\n    return(\r\n        <>\r\n        <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Please Login to proceed\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <h4 className='text-center'>Student Profile Tracker</h4>\r\n        <p>\r\n        <Form>\r\n            <Form.Row>\r\n            <Form.Group as={Col} controlId=\"formGridState\">\r\n                <Form.Label>Login as*</Form.Label>\r\n                <Form.Control as=\"select\" name='designation' onChange={handleInput2} defaultValue=\"Choose...\" required>\r\n                    <option value=''>Choose...</option>\r\n                    <option value='student'>Student</option>\r\n                    <option value='mentor'>Mentor</option>\r\n                </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                <Form.Label>Email*</Form.Label>\r\n                <Form.Control type=\"email\" name='email' onChange={handleInput2} placeholder=\"Enter email\" required />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                <Form.Label>Password*</Form.Label>\r\n                <Form.Control type=\"password\" name='password' onChange={handleInput2} placeholder=\"Password\" required />\r\n                </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Group id=\"formGridCheckbox\">\r\n                <Form.Check type=\"checkbox\" label=\"Remember me\" />\r\n            </Form.Group>\r\n\r\n            <Button href='#' className='float-right' onClick={userData2} variant=\"warning\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n        </p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MyNav;"]},"metadata":{},"sourceType":"module"}